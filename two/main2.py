import asyncio
import logging
import sqlite3

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from check_sub import CheckSubscribe

from inline_kb import channels, my_builder, get_inlineMix_btns

TOKEN = '7571560301:AAFQb0-Tj5a1XpR1Mq-q2iB6DNQG5TxVdYA'
id = '5671959661'

admin_list = ['7455294297']
bot = Bot(token=TOKEN)
dp = Dispatcher()


class Form(StatesGroup):
    id = State()


class AddChanel(StatesGroup):
    name = State()
    url = State()


@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('hello')


@dp.message(Command('admin'))
async def create(message: Message):
    await message.answer('–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å', reply_markup=get_inlineMix_btns(btns={
        '–î–æ–±–∞–≤–∏—Ç—å –ö–∞–Ω–∞–ªüó£': 'add_chanel',
        '–£–¥–∞–ª–∏—Ç—å –ö–∞–Ω–∞–ª‚ùå': 'delete_chanel',
        '–ú–æ–∏ –∫–∞–Ω–∞–ª—ãüë•': 'my_chanels'
    }, sizes=(1, 1)))


### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
@dp.callback_query(F.data == 'add_chanel')
async def add_chanel(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª')
    await state.set_state(AddChanel.url)
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å')


@dp.message(AddChanel.url)
async def chane_name(message: Message, state: FSMContext):
    await state.update_data(url=message.text)
    data = await state.get_data()
    channels.append(data['url'])
    url = data['url']
    if url:
        await message.answer('–ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=my_builder())
        await state.clear()
    else:
        await message.answer('–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ —Å—Å—ã–ª–∫—É –∏–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ —Å—Å—ã–ª–∫—É –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    await state.clear()


### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫


# –ú–æ–∏ –∫–∞–Ω–∞–ª—ã
@dp.callback_query(F.data == 'my_chanels')
async def my_chanels(callback: CallbackQuery):
    await callback.answer('–í–∞—â–∏ –∫–∞–Ω–∞–ª—ã')
    await callback.message.answer('–í–∞—à–∏ –∫–∞–Ω–∞–ª—ã', reply_markup=my_builder())


# –ú–æ–∏ –∫–∞–Ω–∞–ª—ã

async def main():
    dp.message.middleware(CheckSubscribe())
    await dp.start_polling(bot)
    logging.basicConfig(level=logging.INFO)


try:
    asyncio.run(main())
except KeyboardInterrupt:
    print('–í—ã—Ö–æ–¥')
